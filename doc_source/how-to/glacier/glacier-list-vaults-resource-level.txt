// using Amazon.Glacier.Resources;
// using Amazon.Runtime.Resources;

var g = new Glacier();

foreach (var vault in g.GetVaults())
{
  Console.WriteLine("Vault: {0}", vault.Name);
  Console.WriteLine("  Creation date: {0}", vault.CreationDate);
  Console.WriteLine("  Size in bytes: {0}", vault.SizeInBytes);
  Console.WriteLine("  Number of archives: {0}", vault.NumberOfArchives);

  try
  {
    var n = vault.GetNotification();

    Console.WriteLine("  Notifications:");
    Console.WriteLine("    Topic: {0}", n.SNSTopic);

    var events = n.Events;

    if (events.Any())
    {
      Console.WriteLine("    Events:");

      foreach (var e in events)
      {
        Console.WriteLine("{0}", e);
      }
    }
    else
    {
      Console.WriteLine("    No events set.");
    }

  }
  catch (ResourceLoadException)
  {
    Console.WriteLine("    No notifications set.");
  }

  var jobs = vault.GetJobs();

  if (jobs.Any())
  {
    Console.WriteLine("  Jobs:");

    foreach (var job in jobs)
    {
      Console.WriteLine("    For job ID: {0}",
        job.Id);
      Console.WriteLine("Archive ID: {0}",
        job.ArchiveId);
      Console.WriteLine("Archive size in bytes: {0}",
        job.ArchiveSizeInBytes.ToString());
      Console.WriteLine("Completed: {0}",
        job.Completed);
      Console.WriteLine("Completion date: {0}",
        job.CompletionDate);
      Console.WriteLine("Creation date: {0}",
        job.CreationDate);
      Console.WriteLine("Inventory size in bytes: {0}",
        job.InventorySizeInBytes);
      Console.WriteLine("Job description: {0}",
        job.JobDescription);
      Console.WriteLine("Status code: {0}",
        job.StatusCode.Value);
      Console.WriteLine("Status message: {0}",
        job.StatusMessage);
    }

  }
  else
  {
    Console.WriteLine("  No jobs.");
  }

}